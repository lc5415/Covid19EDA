# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
#
# See https://github.com/r-lib/actions/tree/master/examples#readme for
# additional example workflows available for the R community.

name: Update-Automate-Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron: '0 12 */3 * *'

jobs:
  ShinyDoc-Update:
    runs-on: macos-10.15 # macOS Catalina
    strategy:
      matrix:
        r-version: [4.0.2] 

    steps:
      - uses: actions/checkout@v3
      - name: Set up R ${{ matrix.r-version }}
        uses: r-lib/actions/setup-R@v1
        with:
          r-version: ${{ matrix.r-version }}

      - name: Setting up pandoc for Rmd docs
        uses: r-lib/actions/setup-pandoc@v1
        
      - name: Cache R packages
        id: cache
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-shinydoc
          restore-keys: |
            ${{ runner.os }}-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          install.packages(c("rsconnect", "dplyr", "ggplot2",
          "tidyr", "leaflet", "plotly", "ezplot",
          "shiny", "rmarkdown"))
        shell: Rscript {0}
        
      - name: Updating data and cleaning 
        run: |
          source('scripts/datacleaning.R')
        shell: Rscript {0}
        
      - name: Running plots scripts
        run: |
          source('scripts/treemap.R')
          source('scripts/line_plot_cumulative.R')
          source('scripts/line_plot_daily.R')
          source('scripts/maps.R')
        shell: Rscript {0}
        
      - name: Connect to Shiny
        env:
          SHINY_TOKEN: ${{ secrets.SHINY_TOKEN }}
          SHINY_SECRET: ${{ secrets.SHINY_SECRET }}
        run: |
          shiny_token = Sys.getenv("SHINY_TOKEN")
          shiny_secret = Sys.getenv("SHINY_SECRET")
          rsconnect::setAccountInfo(name='lucha6', token=shiny_token, secret=shiny_secret)
        shell: Rscript {0}
        
      - name: Uploading to shinyapps.io
        run: rsconnect::deployDoc("COVIDEDA.Rmd", forceUpdate = getOption("rsconnect.force.update.apps", TRUE))
        shell: Rscript {0}
